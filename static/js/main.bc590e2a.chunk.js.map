{"version":3,"sources":["components/Editor.js","data/LocalStorage.js","App.js","index.js"],"names":["useStyles","makeStyles","root","display","flexDirection","flexGrow","flexBasis","padding","head","borderTopRightRadius","borderTopLeftRadius","background","color","justifyContent","alignItems","wrapper","overflow","Editor","props","useState","open","setOpen","displayName","language","value","onChange","classes","Box","className","style","id","Typography","variant","IconButton","onClick","prevOpen","Minimize","Fullscreen","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","autocorrect","LocalStorage","key","initial","PrefixedKey","JsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","width","height","margin","apptop","appbottom","App","useLocalStorage","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeOut","setTimeout","clearTimeout","title","sandbox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc590e2a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n// import Codemirror css js languages\r\nimport 'codemirror/lib/codemirror.css'\r\nimport \"codemirror/theme/monokai.css\"\r\nimport \"codemirror/mode/xml/xml\"\r\nimport \"codemirror/mode/javascript/javascript\"\r\nimport \"codemirror/mode/css/css\"\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { Minimize , Fullscreen } from '@material-ui/icons'\r\nimport { Box, Typography, IconButton, makeStyles } from '@material-ui/core'\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexGrow: 1,\r\n        flexBasis: 0,\r\n        padding: \"1rem\"\r\n    },\r\n    head: {\r\n        borderTopRightRadius: \"1rem\",\r\n        borderTopLeftRadius: '1rem',\r\n        background: \"#6e6d6d\",\r\n        color: '#ff7171',\r\n        padding: '0 0 0 10px',\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center '\r\n\r\n    },\r\n    wrapper: {\r\n        flexGrow: 1,\r\n        overflow: 'hidden !important'\r\n    }\r\n})\r\n\r\n\r\nfunction Editor(props) {\r\n    const [open, setOpen] = useState(true)\r\n    const { displayName, language, value, onChange } = props\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleChange = (editor, data, value) => {\r\n        onChange(value)\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}\r\n        style={{ flexGrow : ` ${open ? 1:0}`}}\r\n        id={open? \"\" :\"collaps\" }\r\n        >\r\n            <Box className={classes.head}>\r\n                <Typography color='inherit' variant='body1'>\r\n                    {displayName}\r\n                </Typography>\r\n                <Box />\r\n                <IconButton\r\n                    color='inherit'\r\n                    onClick={()=>setOpen(prevOpen=>!prevOpen)} \r\n                    >\r\n                        {open? <Minimize /> :<Fullscreen/> }\r\n                   \r\n                </IconButton>\r\n            </Box>\r\n            <ControlledEditor\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    lineNumbers: true,\r\n                    theme: 'monokai',\r\n                    autocorrect: true\r\n                }}\r\n                className={classes.wrapper}\r\n\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import { useEffect, useState } from 'react'\r\n// add prefixs to the app keys in localStorage \r\nconst prefix = 'CodePen-Page'\r\n\r\nexport default function LocalStorage(key, initial) {\r\n    const PrefixedKey = prefix + key\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const JsonValue = localStorage.getItem(PrefixedKey)\r\n        if (JsonValue != null) return JSON.parse(JsonValue)\r\n        if (typeof initial === \"function\") return initial()\r\n        return initial\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(PrefixedKey, JSON.stringify(value))\r\n    }, [PrefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\nimport { Box, makeStyles } from '@material-ui/core'\nimport Editor from './components/Editor';\nimport useLocalStorage from './data/LocalStorage'\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: \"100%\",\n    height: \"100vh\",\n    margin: 0,\n    padding: 0\n\n  },\n  apptop: {\n    width: '100%',\n    height: \"100%\",\n    background: \"#41444b\",\n    display: 'flex',\n    padding: '1rem',\n    justifyContent: 'space-evenly'\n  },\n  appbottom: {\n    width: '100%',\n    height: \"100%\"\n  }\n})\n\nfunction App() {\n\n  const [html, setHtml] = useLocalStorage('html','')\n  const [css, setCss] = useLocalStorage('css','')\n  const [js, setJs] = useLocalStorage('js','')\n  const [srcDoc, setSrcDoc] = useState('')\n  // slowe down excution \n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      setSrcDoc( `\n     <!DOCTYPE html>\n   <html lang=\"en\">\n   <head>\n       <meta charset=\"UTF-8\">\n       <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n       <title>Document</title>\n   </head>\n   <body>\n       ${html}\n   </body>\n   <style> ${css} </style>\n   <script> ${js}</script>\n   </html>\n     `)\n    }, [250])\n\n    return ()=> clearTimeout(timeOut)\n  }, [html, css, js])\n\n\n\n\n  const classes = useStyles()\n\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.apptop}>\n        <Editor\n          displayName='HTML'\n          language='xml'\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          displayName='CSS'\n          language='css'\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          displayName='JavaScript'\n          language='js'\n          value={js}\n          onChange={setJs}\n        />\n      </Box>\n      <Box className={classes.appbottom}>\n        <iframe title=\"Codepan clone \" sandbox='allow-scripts' width='100%' height='100%' srcDoc={srcDoc}>\n        </iframe>\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}